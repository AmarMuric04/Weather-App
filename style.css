@import url("https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap");

html {
  font-size: 62.5%;
  font-family: "Roboto";
}

* {
  padding: 0px;
  margin: 0px;
}

body {
  font-size: 2rem;
  width: 100vw;
  height: 100svh;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  background-image: url("background-org.png");
}

.help {
  position: absolute;
  top: 3rem;
  right: 3rem;
  background-color: white;
  width: 7rem;
  height: 7rem;
  display: grid;
  place-items: center;
  border-radius: 2rem;
  cursor: pointer;
  z-index: 2;
  border-bottom-right-radius: 0rem;
  border-bottom-left-radius: 0rem;
}

.help:hover {
  &:after {
    display: flex;
    justify-content: center;
    text-align: center;
    padding: 2rem;
    content: "The input field is not restricted to just cities or countries. It can also take continents and other locations as a value (e.g. 'Europe'). Note that if you input a country or continent the results wont be for the average temperature of the set location, the search will just look for a location with the set name. (e.g. 'America' returns a temperature of a random place in Mexico).";
    position: absolute;
    top: 7rem;
    right: 0rem;
    background-color: white;
    animation: dropdown 2s forwards;
    height: 42rem;
    width: 20rem;
    border-radius: 2rem;
    border-top-right-radius: 0rem;
  }
}

.hidden {
  display: none;
}

.main {
  position: relative;
  max-height: 80rem;
  height: 10rem;
  width: 60rem;
  padding: 5rem;
  display: flex;
  align-items: center;
  flex-direction: column;
  border-radius: 2rem;
  box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.5);
  background-color: white;
  opacity: 0.8;
  overflow: hidden;
  transition: all 2s;
}

.reset-model {
  position: absolute;
  top: 2rem;
  right: 2rem;
}

.reset-model img {
  width: 2rem;
  height: 2rem;
  cursor: pointer;
}

.main input {
  min-height: 10rem;
  min-width: 50%;
  border-radius: 1rem;
  border: none;
  z-index: 2;
  padding-left: 2rem;
  font-size: 2rem;
  border: 1px solid orange;
}

.main input:focus {
  outline: none;
}

.main button {
  min-height: 10.2rem;
  width: 30%;
  position: relative;
  left: -2rem;
  border-top-right-radius: 2rem;
  border-bottom-right-radius: 2rem;
  border: none;
  background-color: orange;
  color: white;
  font-weight: bold;
  font-size: 1.5rem;
  cursor: pointer;
  font-family: "Roboto";
}

.overview {
  min-width: 10rem;
  min-height: 10rem;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: rgb(255, 231, 159);
  background: radial-gradient(
    circle,
    rgba(255, 231, 159, 1) 17%,
    rgba(255, 161, 8, 1) 100%
  );
  padding: 2rem;
  border-radius: 2rem;
  border: 1rem solid orange;
}

.input--button {
  display: flex;
  justify-content: center;
  height: 10%;
  width: 100%;
  flex: 1;
}

.results {
  margin-top: 10rem;
  display: flex;
  justify-content: space-around;
  align-items: center;
  flex-direction: column;
  flex: 9;
}

.temp {
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 5rem;
}

.icon-image {
  width: 7rem;
  height: 7rem;
}

.icon-medium {
  width: 6rem;
  height: 6rem;
}

.icon-small {
  width: 5rem;
  height: 5rem;
}

.loading {
  width: 4rem;
  height: 4rem;
  animation: rotate linear 3s infinite;
}

@keyframes rotate {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.other-info {
  display: grid;
  grid-template-columns: 30rem 30rem;
  font-size: 4rem;
}

.other__info {
  height: 10rem;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  column-gap: 1rem;
}

.other__info:before {
  position: absolute;
  top: -0.7rem;
  font-size: 2rem;
  color: gray;
}
.wind-speed:before {
  content: "wind speed";
}
.clouds:before {
  content: "clouds";
}
.humidity:before {
  content: "humidity";
}
.pressure:before {
  content: "pressure";
}

.error-message {
  display: flex;
  flex-direction: column;
  align-items: center;
  row-gap: 4rem;
}
